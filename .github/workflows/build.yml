name: Build and Release Desktop App

# Separate triggers to avoid double-builds
on:
  push:
    branches: [ main ]
  push:
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  build-mac:
    runs-on: macos-latest
    
    steps:
      # Download your code
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      # Install dependencies
      - name: Install dependencies
        run: npm ci

      # Build and package the app
      - name: Build Electron app
        run: npm run electron:build:mac
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Upload artifacts with unique names to avoid conflicts
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: zawali-finance-mac-${{ github.run_number }}-${{ github.sha }}
          path: dist-electron/*.dmg

      # TAGGED RELEASES: Create real GitHub release (highest priority)
      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v1
        with:
          files: dist-electron/*.dmg
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # DEVELOPMENT RELEASES: Only for main pushes that aren't tag pushes
      - name: Create Draft Release
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v1.0.0-dev-${{ github.run_number }}
          name: Development Build ${{ github.run_number }} (${{ github.sha }})
          files: dist-electron/*.dmg
          draft: true
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}